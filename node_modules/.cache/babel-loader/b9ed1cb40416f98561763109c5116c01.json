{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = init;\n\nvar _index = require('./hooks/index');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _passport = require('./passport');\n\nvar _passport2 = _interopRequireDefault(_passport);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar defaults = {\n  header: 'Authorization',\n  cookie: 'feathers-jwt',\n  storageKey: 'feathers-jwt',\n  jwtStrategy: 'jwt',\n  path: '/authentication',\n  entity: 'user',\n  service: 'users',\n  timeout: 5000\n};\n\nfunction init() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = Object.assign({}, defaults, config);\n  return function () {\n    var app = this;\n    app.passport = new _passport2.default(app, options);\n    app.authenticate = app.passport.authenticate.bind(app.passport);\n    app.logout = app.passport.logout.bind(app.passport); // Set up hook that adds token and user to params so that\n    // it they can be accessed by client side hooks and services\n\n    app.mixins.push(function (service) {\n      // if (typeof service.hooks !== 'function') {\n      if (typeof service.before !== 'function' || typeof service.after !== 'function') {\n        throw new Error('It looks like feathers-hooks isn\\'t configured. It is required before running feathers-authentication.');\n      }\n\n      service.before(_index2.default.populateAccessToken(options));\n    }); // Set up hook that adds authorization header for REST provider\n\n    if (app.rest) {\n      app.mixins.push(function (service) {\n        service.before(_index2.default.populateHeader(options));\n      });\n    }\n  };\n}\n\ninit.defaults = defaults;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}