{"ast":null,"code":"import _classCallCheck from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alex/Desktop/tick/src/components/UIComponents/Tick/index.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TICK_CLOCK_ICON, TICK_CLOCK_ALT } from '../../../constants/Tick';\nimport Body from './Body';\nimport { tickIsAuth, tickAuth, tickReturnTracker, displayMessages } from '../../../actions/Tick';\n\nvar Tick =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tick, _Component);\n\n  function Tick(props) {\n    var _this;\n\n    _classCallCheck(this, Tick);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tick).call(this, props));\n    /**\n     * Hide or show body class for animation show/hide tick popup\n     * @type {{toggleTickBodyValue: string}}\n     */\n\n    _this.toggleTickBody = function () {\n      var toggleTickBodyValue = _this.state.toggleTickBodyValue;\n      var toggleClass = '';\n\n      if (toggleTickBodyValue === '' || toggleTickBodyValue === 'hide') {\n        toggleClass = 'show';\n      } else {\n        toggleClass = 'hide';\n      }\n\n      _this.setState({\n        toggleTickBodyValue: toggleClass\n      });\n    };\n\n    _this.state = {\n      toggleTickBodyValue: 'show'\n    };\n    return _this;\n  }\n\n  _createClass(Tick, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      /**\n       * If user authorized in tick, show time tracker\n       * else show auth form\n       */\n      var tickIsAuth = this.props.tickIsAuth;\n      tickIsAuth();\n    }\n    /**\n     * Handler for show or hide tick popup\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isAuth = _this$props.isAuth,\n          tickAuth = _this$props.tickAuth,\n          isFetching = _this$props.isFetching,\n          task = _this$props.task,\n          tickReturnTracker = _this$props.tickReturnTracker,\n          displayMessages = _this$props.displayMessages;\n      var toggleTickBody = this.toggleTickBody;\n      var toggleTickBodyValue = this.state.toggleTickBodyValue;\n      return React.createElement(\"div\", {\n        className: classNames('tick-container'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classNames('tick-header'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        onClick: toggleTickBody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: TICK_CLOCK_ICON,\n        alt: TICK_CLOCK_ALT,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }))), React.createElement(Body, {\n        toggleTickBodyValue: toggleTickBodyValue,\n        tickReturnTracker: tickReturnTracker,\n        toggleTickBody: toggleTickBody,\n        displayMessages: displayMessages,\n        isAuth: isAuth,\n        isFetching: isFetching,\n        tickAuth: tickAuth,\n        task: task,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Tick;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$tick = state.tick,\n      isAuth = _state$tick.isAuth,\n      isFetching = _state$tick.isFetching,\n      task = _state$tick.task;\n  return {\n    isAuth: isAuth,\n    isFetching: isFetching,\n    task: task\n  };\n};\n\nvar mapDispatchToProps = {\n  tickIsAuth: tickIsAuth,\n  tickAuth: tickAuth,\n  tickReturnTracker: tickReturnTracker,\n  displayMessages: displayMessages\n};\nTick.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  task: PropTypes.instanceOf(Object).isRequired,\n  tickAuth: PropTypes.func.isRequired,\n  tickIsAuth: PropTypes.func.isRequired,\n  tickReturnTracker: PropTypes.func.isRequired,\n  displayMessages: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Tick);","map":{"version":3,"sources":["/home/alex/Desktop/tick/src/components/UIComponents/Tick/index.js"],"names":["React","Component","classNames","PropTypes","connect","TICK_CLOCK_ICON","TICK_CLOCK_ALT","Body","tickIsAuth","tickAuth","tickReturnTracker","displayMessages","Tick","props","toggleTickBody","toggleTickBodyValue","state","toggleClass","setState","isAuth","isFetching","task","mapStateToProps","tick","mapDispatchToProps","propTypes","bool","isRequired","instanceOf","Object","func"],"mappings":"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","sourcesContent":["import React, {\n  Component,\n} from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {\n  connect,\n} from 'react-redux';\nimport {\n  TICK_CLOCK_ICON,\n  TICK_CLOCK_ALT,\n} from '../../../constants/Tick';\nimport Body from './Body';\nimport {\n  tickIsAuth,\n  tickAuth,\n  tickReturnTracker,\n  displayMessages,\n} from '../../../actions/Tick';\n\nclass Tick extends Component {\n\n  constructor(props) {\n    super(props);\n\n    /**\n     * Hide or show body class for animation show/hide tick popup\n     * @type {{toggleTickBodyValue: string}}\n     */\n    this.state = {\n      toggleTickBodyValue: 'show',\n    };\n  }\n\n  componentDidMount() {\n    /**\n     * If user authorized in tick, show time tracker\n     * else show auth form\n     */\n    const {\n      tickIsAuth,\n    } = this.props;\n    tickIsAuth();\n  }\n\n  /**\n   * Handler for show or hide tick popup\n   */\n  toggleTickBody = () => {\n    const {\n      toggleTickBodyValue,\n    } = this.state;\n\n    let toggleClass = '';\n    if (toggleTickBodyValue === '' || toggleTickBodyValue === 'hide') {\n      toggleClass = 'show';\n    } else {\n      toggleClass = 'hide';\n    }\n\n    this.setState({\n      toggleTickBodyValue: toggleClass,\n    });\n  };\n\n  render() {\n\n    const {\n      isAuth,\n      tickAuth,\n      isFetching,\n      task,\n      tickReturnTracker,\n      displayMessages,\n    } = this.props;\n\n    const {\n      toggleTickBody,\n    } = this;\n\n    const {\n      toggleTickBodyValue,\n    } = this.state;\n\n    return (\n      <div className={classNames('tick-container')}>\n        <div className={classNames('tick-header')}>\n          <i onClick={toggleTickBody}>\n            <img\n              src={TICK_CLOCK_ICON}\n              alt={TICK_CLOCK_ALT}\n            />\n          </i>\n        </div>\n        <Body\n          toggleTickBodyValue={toggleTickBodyValue}\n          tickReturnTracker={tickReturnTracker}\n          toggleTickBody={toggleTickBody}\n          displayMessages={displayMessages}\n          isAuth={isAuth}\n          isFetching={isFetching}\n          tickAuth={tickAuth}\n          task={task}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const {\n    isAuth,\n    isFetching,\n    task,\n  } = state.tick;\n\n  return {\n    isAuth,\n    isFetching,\n    task,\n  };\n};\n\nconst mapDispatchToProps = ({\n  tickIsAuth,\n  tickAuth,\n  tickReturnTracker,\n  displayMessages,\n});\n\nTick.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  task: PropTypes.instanceOf(Object).isRequired,\n  tickAuth: PropTypes.func.isRequired,\n  tickIsAuth: PropTypes.func.isRequired,\n  tickReturnTracker: PropTypes.func.isRequired,\n  displayMessages: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tick);\n"]},"metadata":{},"sourceType":"module"}