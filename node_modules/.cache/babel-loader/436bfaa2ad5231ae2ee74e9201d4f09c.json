{"ast":null,"code":"var _jsxFileName = \"/home/alex/Desktop/tick/src/components/UIComponents/Tick/Body.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Auth from './Auth';\nimport Tracker from './Tracker';\nimport TaskStatus from './TaskStatus';\nimport Loading from './Loading';\n/**\n * Component body for display if choice tracker or login form\n * @param props\n * @returns {*}\n * @constructor\n */\n\nvar Body = function Body(props) {\n  var toggleTickBodyValue = props.toggleTickBodyValue,\n      tickReturnTracker = props.tickReturnTracker,\n      isAuth = props.isAuth,\n      isFetching = props.isFetching,\n      tickAuth = props.tickAuth,\n      task = props.task,\n      toggleTickBody = props.toggleTickBody,\n      displayMessages = props.displayMessages;\n  return React.createElement(\"div\", {\n    className: classNames('tick-body', toggleTickBodyValue),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: classNames('hide-tick-popup icons ic-close-active'),\n    onClick: toggleTickBody,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), !isAuth ? React.createElement(Auth, {\n    tickAuth: tickAuth,\n    displayMessages: displayMessages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }) : null, isAuth && !task.id ? React.createElement(Tracker, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }) : null, isAuth && task.id ? React.createElement(TaskStatus, {\n    task: task,\n    tickReturnTracker: tickReturnTracker,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }) : null, React.createElement(Loading, {\n    isFetching: isFetching,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }));\n};\n\nBody.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  task: PropTypes.instanceOf(Object).isRequired,\n  tickAuth: PropTypes.func.isRequired,\n  tickReturnTracker: PropTypes.func.isRequired,\n  toggleTickBody: PropTypes.func.isRequired,\n  displayMessages: PropTypes.func.isRequired,\n  toggleTickBodyValue: PropTypes.string.isRequired\n};\nexport default Body;","map":{"version":3,"sources":["/home/alex/Desktop/tick/src/components/UIComponents/Tick/Body.js"],"names":["React","classNames","PropTypes","Auth","Tracker","TaskStatus","Loading","Body","props","toggleTickBodyValue","tickReturnTracker","isAuth","isFetching","tickAuth","task","toggleTickBody","displayMessages","id","propTypes","bool","isRequired","instanceOf","Object","func","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA;;;;;;;AAMA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAAA,MAGpBC,mBAHoB,GAWlBD,KAXkB,CAGpBC,mBAHoB;AAAA,MAIpBC,iBAJoB,GAWlBF,KAXkB,CAIpBE,iBAJoB;AAAA,MAKpBC,MALoB,GAWlBH,KAXkB,CAKpBG,MALoB;AAAA,MAMpBC,UANoB,GAWlBJ,KAXkB,CAMpBI,UANoB;AAAA,MAOpBC,QAPoB,GAWlBL,KAXkB,CAOpBK,QAPoB;AAAA,MAQpBC,IARoB,GAWlBN,KAXkB,CAQpBM,IARoB;AAAA,MASpBC,cAToB,GAWlBP,KAXkB,CASpBO,cAToB;AAAA,MAUpBC,eAVoB,GAWlBR,KAXkB,CAUpBQ,eAVoB;AAatB,SACE;AAAK,IAAA,SAAS,EAAEf,UAAU,CAAC,WAAD,EAAcQ,mBAAd,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAER,UAAU,CAAC,uCAAD,CADvB;AAEE,IAAA,OAAO,EAAEc,cAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMI,CAACJ,MAAD,GACE,oBAAC,IAAD;AACE,IAAA,QAAQ,EAAEE,QADZ;AAEE,IAAA,eAAe,EAAEG,eAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAMI,IAZR,EAgBIL,MAAM,IAAI,CAACG,IAAI,CAACG,EAAhB,GACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAGI,IAnBR,EAuBIN,MAAM,IAAIG,IAAI,CAACG,EAAf,GACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAEH,IADR;AAEE,IAAA,iBAAiB,EAAEJ,iBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAMI,IA7BR,EA+BE,oBAAC,OAAD;AACE,IAAA,UAAU,EAAEE,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,CADF;AAqCD,CAlDD;;AAoDAL,IAAI,CAACW,SAAL,GAAiB;AACfP,EAAAA,MAAM,EAAET,SAAS,CAACiB,IAAV,CAAeC,UADR;AAEfR,EAAAA,UAAU,EAAEV,SAAS,CAACiB,IAAV,CAAeC,UAFZ;AAGfN,EAAAA,IAAI,EAAEZ,SAAS,CAACmB,UAAV,CAAqBC,MAArB,EAA6BF,UAHpB;AAIfP,EAAAA,QAAQ,EAAEX,SAAS,CAACqB,IAAV,CAAeH,UAJV;AAKfV,EAAAA,iBAAiB,EAAER,SAAS,CAACqB,IAAV,CAAeH,UALnB;AAMfL,EAAAA,cAAc,EAAEb,SAAS,CAACqB,IAAV,CAAeH,UANhB;AAOfJ,EAAAA,eAAe,EAAEd,SAAS,CAACqB,IAAV,CAAeH,UAPjB;AAQfX,EAAAA,mBAAmB,EAAEP,SAAS,CAACsB,MAAV,CAAiBJ;AARvB,CAAjB;AAWA,eAAeb,IAAf","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Auth from './Auth';\nimport Tracker from './Tracker';\nimport TaskStatus from './TaskStatus';\nimport Loading from './Loading';\n\n/**\n * Component body for display if choice tracker or login form\n * @param props\n * @returns {*}\n * @constructor\n */\nconst Body = (props) => {\n\n  const {\n    toggleTickBodyValue,\n    tickReturnTracker,\n    isAuth,\n    isFetching,\n    tickAuth,\n    task,\n    toggleTickBody,\n    displayMessages,\n  } = props;\n\n  return (\n    <div className={classNames('tick-body', toggleTickBodyValue)}>\n      <span\n        className={classNames('hide-tick-popup icons ic-close-active')}\n        onClick={toggleTickBody}\n      />\n      {\n        !isAuth ? (\n          <Auth\n            tickAuth={tickAuth}\n            displayMessages={displayMessages}\n          />\n        )\n          : null\n      }\n\n      {\n        isAuth && !task.id ? (\n          <Tracker />\n        )\n          : null\n      }\n\n      {\n        isAuth && task.id ? (\n          <TaskStatus\n            task={task}\n            tickReturnTracker={tickReturnTracker}\n          />\n        )\n          : null\n      }\n      <Loading\n        isFetching={isFetching}\n      />\n    </div>\n  );\n};\n\nBody.propTypes = {\n  isAuth: PropTypes.bool.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  task: PropTypes.instanceOf(Object).isRequired,\n  tickAuth: PropTypes.func.isRequired,\n  tickReturnTracker: PropTypes.func.isRequired,\n  toggleTickBody: PropTypes.func.isRequired,\n  displayMessages: PropTypes.func.isRequired,\n  toggleTickBodyValue: PropTypes.string.isRequired,\n};\n\nexport default Body;\n"]},"metadata":{},"sourceType":"module"}