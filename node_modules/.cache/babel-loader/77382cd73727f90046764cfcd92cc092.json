{"ast":null,"code":"import _classCallCheck from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alex/Desktop/tick/src/components/Tick/Auth.js\";\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { TICK_EMAIL_TEXT, TICK_PASSWORD_TEXT, TICK_BUTTON_AUTH_TEXT, TICK_AUTH_FORM_NAME_TEXT, TICK_ERROR_EMAIL_TEXT } from '../../constants/Tick';\nimport { isValidInputEmail } from '../../services/TickValidate';\nimport Messages from \"./Messages\";\n/**\n * Auth component for show form login\n * if not exists user tick api_token and subscription_id\n */\n\nvar Auth =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Auth, _Component);\n\n  function Auth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Auth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Auth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.authHandler = function (event) {\n      event.preventDefault();\n      /**\n       * Export tickAuth action\n       */\n\n      var _this$props = _this.props,\n          tickAuth = _this$props.tickAuth,\n          displayMessages = _this$props.displayMessages; // Get user tick email and password from form\n\n      var username = event.target.username.value;\n      var password = event.target.password.value;\n      /**\n       * Valid form data email\n      */\n\n      if (!isValidInputEmail(username)) {\n        var errors = [{\n          field: 'email',\n          message: TICK_ERROR_EMAIL_TEXT\n        }];\n        return displayMessages(errors);\n      }\n\n      return tickAuth(username, password);\n    };\n\n    return _this;\n  }\n\n  _createClass(Auth, [{\n    key: \"render\",\n    value: function render() {\n      var authHandler = this.authHandler;\n      return React.createElement(\"div\", {\n        className: classNames('tick-auth'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classNames('auth-header'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, TICK_AUTH_FORM_NAME_TEXT)), React.createElement(Messages, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"form\", {\n        onSubmit: authHandler,\n        className: classNames('tick-auth-form'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"tickUsername\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, TICK_EMAIL_TEXT, React.createElement(\"input\", {\n        id: \"tickUsername\",\n        type: \"text\",\n        name: \"username\",\n        defaultValue: \"alex0735070005@gmail.com\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        htmlFor: \"tickPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, TICK_PASSWORD_TEXT, React.createElement(\"input\", {\n        id: \"tickPassword\",\n        type: \"password\",\n        name: \"password\",\n        defaultValue: \"wz2c9hge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, TICK_BUTTON_AUTH_TEXT)));\n    }\n  }]);\n\n  return Auth;\n}(Component);\n\nAuth.propTypes = {\n  tickAuth: PropTypes.func.isRequired,\n  displayMessages: PropTypes.func.isRequired\n};\nexport default Auth;","map":{"version":3,"sources":["/home/alex/Desktop/tick/src/components/Tick/Auth.js"],"names":["React","Component","classNames","PropTypes","TICK_EMAIL_TEXT","TICK_PASSWORD_TEXT","TICK_BUTTON_AUTH_TEXT","TICK_AUTH_FORM_NAME_TEXT","TICK_ERROR_EMAIL_TEXT","isValidInputEmail","Messages","Auth","authHandler","event","preventDefault","props","tickAuth","displayMessages","username","target","value","password","errors","field","message","propTypes","func","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IACEC,SADF,QAEO,OAFP;AAGA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,eADF,EAEEC,kBAFF,EAGEC,qBAHF,EAIEC,wBAJF,EAKEC,qBALF,QAMO,sBANP;AAOA,SACEC,iBADF,QAEO,6BAFP;AAIA,OAAOC,QAAP,MAAqB,YAArB;AAEA;;;;;IAIMC,I;;;;;;;;;;;;;;;;;;UAQJC,W,GAAc,UAACC,KAAD,EAAW;AACvBA,MAAAA,KAAK,CAACC,cAAN;AAEA;;;;AAHuB,wBASnB,MAAKC,KATc;AAAA,UAOrBC,QAPqB,eAOrBA,QAPqB;AAAA,UAQrBC,eARqB,eAQrBA,eARqB,EAWvB;;AACA,UAAMC,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAaD,QAAb,CAAsBE,KAAvC;AACA,UAAMC,QAAQ,GAAGR,KAAK,CAACM,MAAN,CAAaE,QAAb,CAAsBD,KAAvC;AAEA;;;;AAGA,UAAI,CAACX,iBAAiB,CAACS,QAAD,CAAtB,EAAkC;AAChC,YAAII,MAAM,GAAG,CACX;AACEC,UAAAA,KAAK,EAAE,OADT;AAEEC,UAAAA,OAAO,EAAEhB;AAFX,SADW,CAAb;AAMA,eAAOS,eAAe,CAACK,MAAD,CAAtB;AACD;;AACD,aAAON,QAAQ,CAACE,QAAD,EAAWG,QAAX,CAAf;AACD,K;;;;;;;6BAEQ;AAAA,UAGLT,WAHK,GAIH,IAJG,CAGLA,WAHK;AAMP,aACE;AAAK,QAAA,SAAS,EAAEV,UAAU,CAAC,WAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEA,UAAU,CAAC,aAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKK,wBAAL,CADF,CADF,EAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE;AACE,QAAA,QAAQ,EAAEK,WADZ;AAEE,QAAA,SAAS,EAAEV,UAAU,CAAC,gBAAD,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAO,QAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGE,eADH,EAEE;AACE,QAAA,EAAE,EAAC,cADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,YAAY,EAAC,0BAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAJF,EAaE;AAAO,QAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGC,kBADH,EAEE;AACE,QAAA,EAAE,EAAC,cADL;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,YAAY,EAAC,UAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAbF,EAsBE;AACE,QAAA,IAAI,EAAC,QADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGC,qBAHH,CAtBF,CALF,CADF;AAoCD;;;;EAhFgBL,S;;AAmFnBU,IAAI,CAACc,SAAL,GAAiB;AACfT,EAAAA,QAAQ,EAAEb,SAAS,CAACuB,IAAV,CAAeC,UADV;AAEfV,EAAAA,eAAe,EAACd,SAAS,CAACuB,IAAV,CAAeC;AAFhB,CAAjB;AAKA,eAAehB,IAAf","sourcesContent":["import React, {\n  Component,\n} from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport {\n  TICK_EMAIL_TEXT,\n  TICK_PASSWORD_TEXT,\n  TICK_BUTTON_AUTH_TEXT,\n  TICK_AUTH_FORM_NAME_TEXT,\n  TICK_ERROR_EMAIL_TEXT,\n} from '../../constants/Tick';\nimport {\n  isValidInputEmail,\n} from '../../services/TickValidate';\n\nimport Messages from \"./Messages\";\n\n/**\n * Auth component for show form login\n * if not exists user tick api_token and subscription_id\n */\nclass Auth extends Component {\n\n\n  /**\n   * Handler submit form auth for send auth data\n   * and form validation\n   * @param event\n   */\n  authHandler = (event) => {\n    event.preventDefault();\n\n    /**\n     * Export tickAuth action\n     */\n    const {\n      tickAuth,\n      displayMessages,\n    } = this.props;\n\n    // Get user tick email and password from form\n    const username = event.target.username.value;\n    const password = event.target.password.value;\n\n    /**\n     * Valid form data email\n    */\n    if (!isValidInputEmail(username)) {\n      let errors = [\n        {\n          field: 'email',\n          message: TICK_ERROR_EMAIL_TEXT,\n        },\n      ];\n      return displayMessages(errors);\n    }\n    return tickAuth(username, password);\n  };\n\n  render() {\n\n    const {\n      authHandler,\n    } = this;\n\n    return (\n      <div className={classNames('tick-auth')}>\n        <div className={classNames('auth-header')}>\n          <h3>{TICK_AUTH_FORM_NAME_TEXT}</h3>\n        </div>\n        <Messages />\n        <form\n          onSubmit={authHandler}\n          className={classNames('tick-auth-form')}\n        >\n          <label htmlFor='tickUsername'>\n            {TICK_EMAIL_TEXT}\n            <input\n              id='tickUsername'\n              type='text'\n              name='username'\n              defaultValue='alex0735070005@gmail.com'\n            />\n          </label>\n          <label htmlFor='tickPassword'>\n            {TICK_PASSWORD_TEXT}\n            <input\n              id='tickPassword'\n              type='password'\n              name='password'\n              defaultValue='wz2c9hge'\n            />\n          </label>\n          <button\n            type='submit'\n          >\n            {TICK_BUTTON_AUTH_TEXT}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nAuth.propTypes = {\n  tickAuth: PropTypes.func.isRequired,\n  displayMessages:PropTypes.func.isRequired,\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}