{"ast":null,"code":"import _classCallCheck from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alex/Desktop/tick/src/components/Tick/Tracker.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport classNames from 'classnames';\nimport ProjectSelect from './ProjectSelect';\nimport TaskSelect from './TaskSelect';\nimport TaskDate from './TaskDate';\nimport TaskTime from './TaskTime';\nimport Messages from './Messages';\nimport { TICK_BUTTON_LOGOUT_TEXT, TICK_BUTTON_ENTER_TEXT } from '../../constants/Tick';\nimport { changeProject, changeTask, changeTickDate, changeTickMessage, changeTickTime, tickLogout, createEntry } from '../../../actions/Tick';\n/**\n * Component tracker for display track form\n */\n\nvar Tracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tracker, _Component);\n\n  function Tracker(props) {\n    var _this;\n\n    _classCallCheck(this, Tracker);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tracker).call(this, props));\n\n    _this.changeMessageText = function (event) {\n      var value = event.target.value;\n\n      _this.setState({\n        messageValueText: value\n      });\n\n      _this.changeMessage(value);\n    };\n\n    _this.create = function () {\n      var _this$props = _this.props,\n          selectedProject = _this$props.selectedProject,\n          selectedTask = _this$props.selectedTask,\n          timeValue = _this$props.timeValue,\n          dateValue = _this$props.dateValue,\n          messageValue = _this$props.messageValue,\n          createEntry = _this$props.createEntry;\n      createEntry({\n        timeValue: timeValue,\n        dateValue: dateValue,\n        messageValue: messageValue,\n        selectedTask: selectedTask,\n        selectedProject: selectedProject\n      });\n    };\n\n    _this.state = {\n      messageValueText: ''\n    }; // set delay for input user text in message\n\n    _this.changeMessage = debounce(props.changeTickMessage, 500);\n    return _this;\n  }\n  /**\n   * Handler for input user message text\n   * @param event\n   */\n\n\n  _createClass(Tracker, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          tickLogout = _this$props2.tickLogout,\n          projects = _this$props2.projects,\n          tasks = _this$props2.tasks,\n          changeProject = _this$props2.changeProject,\n          changeTickTime = _this$props2.changeTickTime,\n          changeTickDate = _this$props2.changeTickDate,\n          selectedProject = _this$props2.selectedProject,\n          selectedTask = _this$props2.selectedTask,\n          timeValue = _this$props2.timeValue,\n          dateValue = _this$props2.dateValue,\n          changeTask = _this$props2.changeTask;\n      var create = this.create,\n          changeMessageText = this.changeMessageText;\n      var messageValueText = this.state.messageValueText;\n      return React.createElement(\"div\", {\n        className: classNames('tick-tracker'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classNames('tick-tracker-header'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Tick tracker\"), React.createElement(\"button\", {\n        onClick: tickLogout,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, TICK_BUTTON_LOGOUT_TEXT)), React.createElement(Messages, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classNames('tick-tracker-body'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(ProjectSelect, {\n        projects: projects,\n        changeProject: changeProject,\n        selectedProject: selectedProject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(TaskSelect, {\n        tasks: tasks,\n        changeTask: changeTask,\n        selectedTask: selectedTask,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(TaskTime, {\n        changeTickTime: changeTickTime,\n        timeValue: timeValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(TaskDate, {\n        changeTickDate: changeTickDate,\n        dateValue: dateValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        onChange: changeMessageText,\n        value: messageValueText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: create,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, TICK_BUTTON_ENTER_TEXT)));\n    }\n  }]);\n\n  return Tracker;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$tick = state.tick,\n      projects = _state$tick.projects,\n      tasks = _state$tick.tasks,\n      user = _state$tick.user,\n      selectedProject = _state$tick.selectedProject,\n      selectedTask = _state$tick.selectedTask,\n      timeValue = _state$tick.timeValue,\n      dateValue = _state$tick.dateValue,\n      messageValue = _state$tick.messageValue;\n  return {\n    projects: projects,\n    user: user,\n    tasks: tasks,\n    selectedProject: selectedProject,\n    selectedTask: selectedTask,\n    timeValue: timeValue,\n    dateValue: dateValue,\n    messageValue: messageValue\n  };\n};\n\nvar mapDispatchToProps = {\n  tickLogout: tickLogout,\n  changeProject: changeProject,\n  changeTask: changeTask,\n  changeTickTime: changeTickTime,\n  changeTickDate: changeTickDate,\n  changeTickMessage: changeTickMessage,\n  createEntry: createEntry\n};\nTracker.propTypes = {\n  changeProject: PropTypes.func.isRequired,\n  changeTask: PropTypes.func.isRequired,\n  changeTickDate: PropTypes.func.isRequired,\n  changeTickMessage: PropTypes.func.isRequired,\n  changeTickTime: PropTypes.func.isRequired,\n  createEntry: PropTypes.func.isRequired,\n  dateValue: PropTypes.string.isRequired,\n  messageValue: PropTypes.string.isRequired,\n  projects: PropTypes.instanceOf(Array).isRequired,\n  selectedProject: PropTypes.instanceOf(Object).isRequired,\n  selectedTask: PropTypes.instanceOf(Object).isRequired,\n  tasks: PropTypes.instanceOf(Object).isRequired,\n  tickLogout: PropTypes.func.isRequired,\n  timeValue: PropTypes.string.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Tracker);","map":{"version":3,"sources":["/home/alex/Desktop/tick/src/components/Tick/Tracker.js"],"names":["React","Component","connect","PropTypes","debounce","classNames","ProjectSelect","TaskSelect","TaskDate","TaskTime","Messages","TICK_BUTTON_LOGOUT_TEXT","TICK_BUTTON_ENTER_TEXT","changeProject","changeTask","changeTickDate","changeTickMessage","changeTickTime","tickLogout","createEntry","Tracker","props","changeMessageText","event","value","target","setState","messageValueText","changeMessage","create","selectedProject","selectedTask","timeValue","dateValue","messageValue","state","projects","tasks","mapStateToProps","tick","user","mapDispatchToProps","propTypes","func","isRequired","string","instanceOf","Array","Object"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IACEC,SADF,QAEO,OAFP;AAGA,SACEC,OADF,QAEO,aAFP;AAGA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,SACEC,uBADF,EAEEC,sBAFF,QAGO,sBAHP;AAIA,SACEC,aADF,EAEEC,UAFF,EAGEC,cAHF,EAIEC,iBAJF,EAKEC,cALF,EAMEC,UANF,EAOEC,WAPF,QAQO,uBARP;AAWA;;;;IAGMC,O;;;;;AAEJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAEjB,iFAAMA,KAAN;;AAFiB,UAcnBC,iBAdmB,GAcC,UAAAC,KAAK,EAAI;AAC3B,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B;;AACA,YAAKE,QAAL,CAAc;AACZC,QAAAA,gBAAgB,EAACH;AADL,OAAd;;AAGA,YAAKI,aAAL,CAAmBJ,KAAnB;AACD,KApBkB;;AAAA,UAwBnBK,MAxBmB,GAwBV,YAAM;AAAA,wBAQT,MAAKR,KARI;AAAA,UAEXS,eAFW,eAEXA,eAFW;AAAA,UAGXC,YAHW,eAGXA,YAHW;AAAA,UAIXC,SAJW,eAIXA,SAJW;AAAA,UAKXC,SALW,eAKXA,SALW;AAAA,UAMXC,YANW,eAMXA,YANW;AAAA,UAOXf,WAPW,eAOXA,WAPW;AAUbA,MAAAA,WAAW,CAAC;AACVa,QAAAA,SAAS,EAATA,SADU;AAEVC,QAAAA,SAAS,EAATA,SAFU;AAGVC,QAAAA,YAAY,EAAZA,YAHU;AAIVH,QAAAA,YAAY,EAAZA,YAJU;AAKVD,QAAAA,eAAe,EAAfA;AALU,OAAD,CAAX;AAOD,KAzCkB;;AAGjB,UAAKK,KAAL,GAAa;AACXR,MAAAA,gBAAgB,EAAE;AADP,KAAb,CAHiB,CAMjB;;AACA,UAAKC,aAAL,GAAqBxB,QAAQ,CAACiB,KAAK,CAACL,iBAAP,EAA0B,GAA1B,CAA7B;AAPiB;AAQlB;AAED;;;;;;;;6BAiCS;AAAA,yBAaH,KAAKK,KAbF;AAAA,UAELH,UAFK,gBAELA,UAFK;AAAA,UAGLkB,QAHK,gBAGLA,QAHK;AAAA,UAILC,KAJK,gBAILA,KAJK;AAAA,UAKLxB,aALK,gBAKLA,aALK;AAAA,UAMLI,cANK,gBAMLA,cANK;AAAA,UAOLF,cAPK,gBAOLA,cAPK;AAAA,UAQLe,eARK,gBAQLA,eARK;AAAA,UASLC,YATK,gBASLA,YATK;AAAA,UAULC,SAVK,gBAULA,SAVK;AAAA,UAWLC,SAXK,gBAWLA,SAXK;AAAA,UAYLnB,UAZK,gBAYLA,UAZK;AAAA,UAgBLe,MAhBK,GAkBH,IAlBG,CAgBLA,MAhBK;AAAA,UAiBLP,iBAjBK,GAkBH,IAlBG,CAiBLA,iBAjBK;AAAA,UAqBLK,gBArBK,GAsBH,KAAKQ,KAtBF,CAqBLR,gBArBK;AAwBP,aACE;AAAK,QAAA,SAAS,EAAEtB,UAAU,CAAC,cAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEA,UAAU,CAAC,qBAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AAAQ,QAAA,OAAO,EAAEa,UAAjB;AAA6B,QAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4CP,uBAA5C,CAFF,CADF,EAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME;AAAK,QAAA,SAAS,EAAEN,UAAU,CAAC,mBAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,QAAQ,EAAE+B,QADZ;AAEE,QAAA,aAAa,EAAEvB,aAFjB;AAGE,QAAA,eAAe,EAAEiB,eAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,UAAD;AACE,QAAA,KAAK,EAAEO,KADT;AAEE,QAAA,UAAU,EAAEvB,UAFd;AAGE,QAAA,YAAY,EAAEiB,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAWE,oBAAC,QAAD;AACE,QAAA,cAAc,EAAEd,cADlB;AAEE,QAAA,SAAS,EAAEe,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAeE,oBAAC,QAAD;AACE,QAAA,cAAc,EAAEjB,cADlB;AAEE,QAAA,SAAS,EAAEkB,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EAmBE;AACE,QAAA,QAAQ,EAAEX,iBADZ;AAEE,QAAA,KAAK,EAAEK,gBAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,EAuBE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAEE,MAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGjB,sBAJH,CAvBF,CANF,CADF;AAuCD;;;;EA5GmBX,S;;AA+GtB,IAAMqC,eAAe,GAAG,SAAlBA,eAAkB,CAACH,KAAD,EAAW;AAAA,oBAU7BA,KAAK,CAACI,IAVuB;AAAA,MAE/BH,QAF+B,eAE/BA,QAF+B;AAAA,MAG/BC,KAH+B,eAG/BA,KAH+B;AAAA,MAI/BG,IAJ+B,eAI/BA,IAJ+B;AAAA,MAK/BV,eAL+B,eAK/BA,eAL+B;AAAA,MAM/BC,YAN+B,eAM/BA,YAN+B;AAAA,MAO/BC,SAP+B,eAO/BA,SAP+B;AAAA,MAQ/BC,SAR+B,eAQ/BA,SAR+B;AAAA,MAS/BC,YAT+B,eAS/BA,YAT+B;AAYjC,SAAO;AACLE,IAAAA,QAAQ,EAARA,QADK;AAELI,IAAAA,IAAI,EAAJA,IAFK;AAGLH,IAAAA,KAAK,EAALA,KAHK;AAILP,IAAAA,eAAe,EAAfA,eAJK;AAKLC,IAAAA,YAAY,EAAZA,YALK;AAMLC,IAAAA,SAAS,EAATA,SANK;AAOLC,IAAAA,SAAS,EAATA,SAPK;AAQLC,IAAAA,YAAY,EAAZA;AARK,GAAP;AAUD,CAtBD;;AAwBA,IAAMO,kBAAkB,GAAI;AAC1BvB,EAAAA,UAAU,EAAVA,UAD0B;AAE1BL,EAAAA,aAAa,EAAbA,aAF0B;AAG1BC,EAAAA,UAAU,EAAVA,UAH0B;AAI1BG,EAAAA,cAAc,EAAdA,cAJ0B;AAK1BF,EAAAA,cAAc,EAAdA,cAL0B;AAM1BC,EAAAA,iBAAiB,EAAjBA,iBAN0B;AAO1BG,EAAAA,WAAW,EAAXA;AAP0B,CAA5B;AAUAC,OAAO,CAACsB,SAAR,GAAoB;AAClB7B,EAAAA,aAAa,EAAEV,SAAS,CAACwC,IAAV,CAAeC,UADZ;AAElB9B,EAAAA,UAAU,EAAEX,SAAS,CAACwC,IAAV,CAAeC,UAFT;AAGlB7B,EAAAA,cAAc,EAAEZ,SAAS,CAACwC,IAAV,CAAeC,UAHb;AAIlB5B,EAAAA,iBAAiB,EAAEb,SAAS,CAACwC,IAAV,CAAeC,UAJhB;AAKlB3B,EAAAA,cAAc,EAAEd,SAAS,CAACwC,IAAV,CAAeC,UALb;AAMlBzB,EAAAA,WAAW,EAAEhB,SAAS,CAACwC,IAAV,CAAeC,UANV;AAOlBX,EAAAA,SAAS,EAAE9B,SAAS,CAAC0C,MAAV,CAAiBD,UAPV;AAQlBV,EAAAA,YAAY,EAAE/B,SAAS,CAAC0C,MAAV,CAAiBD,UARb;AASlBR,EAAAA,QAAQ,EAAEjC,SAAS,CAAC2C,UAAV,CAAqBC,KAArB,EAA4BH,UATpB;AAUlBd,EAAAA,eAAe,EAAE3B,SAAS,CAAC2C,UAAV,CAAqBE,MAArB,EAA6BJ,UAV5B;AAWlBb,EAAAA,YAAY,EAAE5B,SAAS,CAAC2C,UAAV,CAAqBE,MAArB,EAA6BJ,UAXzB;AAYlBP,EAAAA,KAAK,EAAElC,SAAS,CAAC2C,UAAV,CAAqBE,MAArB,EAA6BJ,UAZlB;AAalB1B,EAAAA,UAAU,EAAEf,SAAS,CAACwC,IAAV,CAAeC,UAbT;AAclBZ,EAAAA,SAAS,EAAE7B,SAAS,CAAC0C,MAAV,CAAiBD;AAdV,CAApB;AAiBA,eAAe1C,OAAO,CAACoC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,OAA7C,CAAf","sourcesContent":["import React, {\n  Component,\n} from 'react';\nimport {\n  connect,\n} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce';\nimport classNames from 'classnames';\nimport ProjectSelect from './ProjectSelect';\nimport TaskSelect from './TaskSelect';\nimport TaskDate from './TaskDate';\nimport TaskTime from './TaskTime';\nimport Messages from './Messages';\n\nimport {\n  TICK_BUTTON_LOGOUT_TEXT,\n  TICK_BUTTON_ENTER_TEXT,\n} from '../../constants/Tick';\nimport {\n  changeProject,\n  changeTask,\n  changeTickDate,\n  changeTickMessage,\n  changeTickTime,\n  tickLogout,\n  createEntry,\n} from '../../../actions/Tick';\n\n\n/**\n * Component tracker for display track form\n */\nclass Tracker extends Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      messageValueText: '',\n    };\n    // set delay for input user text in message\n    this.changeMessage = debounce(props.changeTickMessage, 500);\n  }\n\n  /**\n   * Handler for input user message text\n   * @param event\n   */\n  changeMessageText = event => {\n    const value = event.target.value;\n    this.setState({\n      messageValueText:value,\n    });\n    this.changeMessage(value);\n  };\n  /**\n   * Handler for create entry time\n   */\n  create = () => {\n    const {\n      selectedProject,\n      selectedTask,\n      timeValue,\n      dateValue,\n      messageValue,\n      createEntry,\n    } = this.props;\n\n    createEntry({\n      timeValue,\n      dateValue,\n      messageValue,\n      selectedTask,\n      selectedProject,\n    });\n  };\n\n  render() {\n    const {\n      tickLogout,\n      projects,\n      tasks,\n      changeProject,\n      changeTickTime,\n      changeTickDate,\n      selectedProject,\n      selectedTask,\n      timeValue,\n      dateValue,\n      changeTask,\n    } = this.props;\n\n    const {\n      create,\n      changeMessageText,\n    } = this;\n\n    const {\n      messageValueText,\n    } = this.state;\n\n    return (\n      <div className={classNames('tick-tracker')}>\n        <div className={classNames('tick-tracker-header')}>\n          <h3>Tick tracker</h3>\n          <button onClick={tickLogout} type='button'>{TICK_BUTTON_LOGOUT_TEXT}</button>\n        </div>\n        <Messages />\n        <div className={classNames('tick-tracker-body')}>\n          <ProjectSelect\n            projects={projects}\n            changeProject={changeProject}\n            selectedProject={selectedProject}\n          />\n          <TaskSelect\n            tasks={tasks}\n            changeTask={changeTask}\n            selectedTask={selectedTask}\n          />\n          <TaskTime\n            changeTickTime={changeTickTime}\n            timeValue={timeValue}\n          />\n          <TaskDate\n            changeTickDate={changeTickDate}\n            dateValue={dateValue}\n          />\n          <textarea\n            onChange={changeMessageText}\n            value={messageValueText}\n          />\n          <button\n            type='button'\n            onClick={create}\n          >\n            {TICK_BUTTON_ENTER_TEXT}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const {\n    projects,\n    tasks,\n    user,\n    selectedProject,\n    selectedTask,\n    timeValue,\n    dateValue,\n    messageValue,\n  } = state.tick;\n\n  return {\n    projects,\n    user,\n    tasks,\n    selectedProject,\n    selectedTask,\n    timeValue,\n    dateValue,\n    messageValue,\n  };\n};\n\nconst mapDispatchToProps = ({\n  tickLogout,\n  changeProject,\n  changeTask,\n  changeTickTime,\n  changeTickDate,\n  changeTickMessage,\n  createEntry,\n});\n\nTracker.propTypes = {\n  changeProject: PropTypes.func.isRequired,\n  changeTask: PropTypes.func.isRequired,\n  changeTickDate: PropTypes.func.isRequired,\n  changeTickMessage: PropTypes.func.isRequired,\n  changeTickTime: PropTypes.func.isRequired,\n  createEntry: PropTypes.func.isRequired,\n  dateValue: PropTypes.string.isRequired,\n  messageValue: PropTypes.string.isRequired,\n  projects: PropTypes.instanceOf(Array).isRequired,\n  selectedProject: PropTypes.instanceOf(Object).isRequired,\n  selectedTask: PropTypes.instanceOf(Object).isRequired,\n  tasks: PropTypes.instanceOf(Object).isRequired,\n  tickLogout: PropTypes.func.isRequired,\n  timeValue: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tracker);\n\n"]},"metadata":{},"sourceType":"module"}