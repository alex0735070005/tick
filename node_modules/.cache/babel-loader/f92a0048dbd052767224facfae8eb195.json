{"ast":null,"code":"import { Record } from 'immutable';\nimport { TICK_SET_PROJECTS, TICK_SET_IS_AUTH, TICK_SET_PROJECT, TICK_SET_TASKS, TICK_SET_SELECTED_TASK, TICK_SET_TASK, TICK_SET_TIME, TICK_SET_DATE, TICK_SET_MESSAGE, TICK_SET_MESSAGES, TICK_CLEAR, TICK_PROJECT_PLACEHOLDER, TICK_TASK_PLACEHOLDER, TICK_SET_IS_FETCHING } from \"../constants/Tick\";\nvar InitState = Record({\n  projects: [],\n  tasks: [],\n  task: {},\n  selectedProject: {\n    label: TICK_PROJECT_PLACEHOLDER\n  },\n  selectedTask: {\n    label: TICK_TASK_PLACEHOLDER\n  },\n  timeValue: '',\n  dateValue: '',\n  messageValue: '',\n  isAuth: false,\n  isFetching: false,\n  isShowMessages: false,\n  messages: []\n});\nvar initState = new InitState();\n\nvar tick = function tick() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type;\n\n  switch (type) {\n    case TICK_SET_PROJECTS:\n      return state.withMutations(function (ctx) {\n        var projects = action.projects;\n        ctx.set('projects', projects);\n      });\n\n    case TICK_SET_TASKS:\n      return state.withMutations(function (ctx) {\n        var tasks = action.tasks;\n        ctx.set('tasks', tasks);\n      });\n\n    case TICK_SET_TASK:\n      return state.withMutations(function (ctx) {\n        var task = action.task;\n        ctx.set('task', task);\n      });\n\n    case TICK_SET_IS_AUTH:\n      return state.withMutations(function (ctx) {\n        var isAuth = action.isAuth;\n        ctx.set('isAuth', isAuth);\n      });\n\n    case TICK_SET_PROJECT:\n      return state.withMutations(function (ctx) {\n        var selectedProject = action.selectedProject;\n        ctx.set('selectedProject', selectedProject);\n      });\n\n    case TICK_SET_SELECTED_TASK:\n      return state.withMutations(function (ctx) {\n        var selectedTask = action.selectedTask;\n        ctx.set('selectedTask', selectedTask);\n      });\n\n    case TICK_SET_TIME:\n      return state.withMutations(function (ctx) {\n        var timeValue = action.timeValue;\n        ctx.set('timeValue', timeValue);\n      });\n\n    case TICK_SET_DATE:\n      return state.withMutations(function (ctx) {\n        var dateValue = action.dateValue;\n        ctx.set('dateValue', dateValue);\n      });\n\n    case TICK_SET_MESSAGE:\n      return state.withMutations(function (ctx) {\n        var messageValue = action.messageValue;\n        ctx.set('messageValue', messageValue);\n      });\n\n    case TICK_SET_MESSAGES:\n      return state.withMutations(function (ctx) {\n        var messages = action.messages;\n        ctx.set('messages', messages);\n      });\n\n    case TICK_SET_IS_FETCHING:\n      return state.withMutations(function (ctx) {\n        var isFetching = action.isFetching;\n        ctx.set('isFetching', isFetching);\n      });\n\n    case TICK_CLEAR:\n      return state.withMutations(function (ctx) {\n        ctx.set('messages', []);\n        ctx.set('task', {});\n        ctx.set('timeValue', '');\n        ctx.set('dateValue', '');\n        ctx.set('messageValue', '');\n        ctx.set('selectedProject', {\n          label: TICK_PROJECT_PLACEHOLDER\n        });\n        ctx.set('selectedTask', {\n          label: TICK_TASK_PLACEHOLDER\n        });\n      });\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default tick;","map":{"version":3,"sources":["/home/alex/Desktop/tick/src/Tick/redusers/Tick.js"],"names":["Record","TICK_SET_PROJECTS","TICK_SET_IS_AUTH","TICK_SET_PROJECT","TICK_SET_TASKS","TICK_SET_SELECTED_TASK","TICK_SET_TASK","TICK_SET_TIME","TICK_SET_DATE","TICK_SET_MESSAGE","TICK_SET_MESSAGES","TICK_CLEAR","TICK_PROJECT_PLACEHOLDER","TICK_TASK_PLACEHOLDER","TICK_SET_IS_FETCHING","InitState","projects","tasks","task","selectedProject","label","selectedTask","timeValue","dateValue","messageValue","isAuth","isFetching","isShowMessages","messages","initState","tick","state","action","type","withMutations","ctx","set"],"mappings":"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","sourcesContent":["import {\n  Record,\n} from 'immutable';\nimport {\n  TICK_SET_PROJECTS,\n  TICK_SET_IS_AUTH,\n  TICK_SET_PROJECT,\n  TICK_SET_TASKS,\n  TICK_SET_SELECTED_TASK,\n  TICK_SET_TASK,\n  TICK_SET_TIME,\n  TICK_SET_DATE,\n  TICK_SET_MESSAGE,\n  TICK_SET_MESSAGES,\n  TICK_CLEAR,\n  TICK_PROJECT_PLACEHOLDER,\n  TICK_TASK_PLACEHOLDER,\n  TICK_SET_IS_FETCHING,\n} from \"../constants/Tick\";\n\n\nconst InitState = Record({\n  projects: [],\n  tasks: [],\n  task: {},\n  selectedProject: {\n    label: TICK_PROJECT_PLACEHOLDER,\n  },\n  selectedTask: {\n    label: TICK_TASK_PLACEHOLDER,\n  },\n  timeValue: '',\n  dateValue: '',\n  messageValue: '',\n  isAuth: false,\n  isFetching: false,\n  isShowMessages: false,\n  messages: [],\n}\n);\n\nconst initState = new InitState();\n\nconst tick = (state = initState, action) => {\n\n  const {\n    type,\n  } = action;\n\n  switch (type) {\n\n    case TICK_SET_PROJECTS:\n      return state.withMutations((ctx) => {\n        const {\n          projects,\n        } = action;\n        ctx.set('projects', projects);\n      });\n\n    case TICK_SET_TASKS:\n      return state.withMutations((ctx) => {\n        const {\n          tasks,\n        } = action;\n        ctx.set('tasks', tasks);\n      });\n\n    case TICK_SET_TASK:\n      return state.withMutations((ctx) => {\n        const {\n          task,\n        } = action;\n        ctx.set('task', task);\n      });\n\n    case TICK_SET_IS_AUTH:\n      return state.withMutations((ctx) => {\n        const {\n          isAuth,\n        } = action;\n        ctx.set('isAuth', isAuth);\n      });\n\n    case TICK_SET_PROJECT:\n      return state.withMutations((ctx) => {\n        const {\n          selectedProject,\n        } = action;\n        ctx.set('selectedProject', selectedProject);\n      });\n\n    case TICK_SET_SELECTED_TASK:\n      return state.withMutations((ctx) => {\n        const {\n          selectedTask,\n        } = action;\n        ctx.set('selectedTask', selectedTask);\n      });\n\n    case TICK_SET_TIME:\n      return state.withMutations((ctx) => {\n        const {\n          timeValue,\n        } = action;\n        ctx.set('timeValue', timeValue);\n      });\n\n    case TICK_SET_DATE:\n      return state.withMutations((ctx) => {\n        const {\n          dateValue,\n        } = action;\n        ctx.set('dateValue', dateValue);\n      });\n\n    case TICK_SET_MESSAGE:\n      return state.withMutations((ctx) => {\n        const {\n          messageValue,\n        } = action;\n        ctx.set('messageValue', messageValue);\n      });\n\n    case TICK_SET_MESSAGES:\n      return state.withMutations((ctx) => {\n        const {\n          messages,\n        } = action;\n        ctx.set('messages', messages);\n      });\n\n    case TICK_SET_IS_FETCHING:\n      return state.withMutations((ctx) => {\n        const {\n          isFetching,\n        } = action;\n        ctx.set('isFetching', isFetching);\n      });\n\n    case TICK_CLEAR:\n      return state.withMutations((ctx) => {\n        ctx.set('messages', []);\n        ctx.set('task', {});\n        ctx.set('timeValue', '');\n        ctx.set('dateValue', '');\n        ctx.set('messageValue', '');\n        ctx.set('selectedProject', {\n          label: TICK_PROJECT_PLACEHOLDER,\n        });\n        ctx.set('selectedTask', {\n          label: TICK_TASK_PLACEHOLDER,\n        });\n      });\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default tick;\n"]},"metadata":{},"sourceType":"module"}