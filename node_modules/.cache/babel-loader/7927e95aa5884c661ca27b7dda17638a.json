{"ast":null,"code":"import _classCallCheck from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alex/Desktop/tick/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alex/Desktop/tick/src/components/Tick/TaskTime.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { isValidInputTime } from '../../services/TickValidate';\nimport { TICK_TIME_PLACEHOLDER } from '../../constants/Tick';\n/**\n * Class for input user time\n */\n\nvar TaskTime =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TaskTime, _Component);\n\n  function TaskTime() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TaskTime);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TaskTime)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.changeTime = function (event) {\n      var changeTickTime = _this.props.changeTickTime;\n      var value = event.target.value; // If valid input user text save in redux state\n\n      if (isValidInputTime(value)) {\n        changeTickTime(value);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TaskTime, [{\n    key: \"render\",\n    value: function render() {\n      var timeValue = this.props.timeValue;\n      var changeTime = this.changeTime;\n      return React.createElement(\"input\", {\n        type: \"text\",\n        className: classNames('tick-time'),\n        onChange: changeTime,\n        value: timeValue,\n        placeholder: TICK_TIME_PLACEHOLDER,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return TaskTime;\n}(Component);\n\nTaskTime.propTypes = {\n  changeTickTime: PropTypes.func.isRequired,\n  timeValue: PropTypes.string.isRequired\n};\nexport default TaskTime;","map":{"version":3,"sources":["/home/alex/Desktop/tick/src/components/Tick/TaskTime.js"],"names":["React","Component","PropTypes","classNames","isValidInputTime","TICK_TIME_PLACEHOLDER","TaskTime","changeTime","event","changeTickTime","props","value","target","timeValue","propTypes","func","isRequired","string"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IACEC,SADF,QAEO,OAFP;AAGA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SACEC,gBADF,QAEO,6BAFP;AAGA,SACEC,qBADF,QAEO,sBAFP;AAIA;;;;IAGMC,Q;;;;;;;;;;;;;;;;;;UAMJC,U,GAAa,UAACC,KAAD,EAAW;AAAA,UAEpBC,cAFoB,GAGlB,MAAKC,KAHa,CAEpBD,cAFoB;AAKtB,UAAME,KAAK,GAAGH,KAAK,CAACI,MAAN,CAAaD,KAA3B,CALsB,CAMtB;;AACA,UAAIP,gBAAgB,CAACO,KAAD,CAApB,EAA6B;AAC3BF,QAAAA,cAAc,CAACE,KAAD,CAAd;AACD;AACF,K;;;;;;;6BAEQ;AAAA,UAELE,SAFK,GAGH,KAAKH,KAHF,CAELG,SAFK;AAAA,UAMLN,UANK,GAOH,IAPG,CAMLA,UANK;AASP,aACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAEJ,UAAU,CAAC,WAAD,CAFvB;AAGE,QAAA,QAAQ,EAAEI,UAHZ;AAIE,QAAA,KAAK,EAAEM,SAJT;AAKE,QAAA,WAAW,EAAER,qBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AASD;;;;EApCoBJ,S;;AAuCvBK,QAAQ,CAACQ,SAAT,GAAqB;AACnBL,EAAAA,cAAc,EAAEP,SAAS,CAACa,IAAV,CAAeC,UADZ;AAEnBH,EAAAA,SAAS,EAAEX,SAAS,CAACe,MAAV,CAAiBD;AAFT,CAArB;AAKA,eAAeV,QAAf","sourcesContent":["import React, {\n  Component,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {\n  isValidInputTime,\n} from '../../services/TickValidate';\nimport {\n  TICK_TIME_PLACEHOLDER,\n} from '../../constants/Tick';\n\n/**\n * Class for input user time\n */\nclass TaskTime extends Component {\n\n  /**\n   * Input user time string\n   * @param {object} event\n   */\n  changeTime = (event) => {\n    const {\n      changeTickTime,\n    } = this.props;\n\n    const value = event.target.value;\n    // If valid input user text save in redux state\n    if (isValidInputTime(value)) {\n      changeTickTime(value);\n    }\n  };\n\n  render() {\n    const {\n      timeValue,\n    } = this.props;\n\n    const {\n      changeTime,\n    } = this;\n\n    return (\n      <input\n        type='text'\n        className={classNames('tick-time')}\n        onChange={changeTime}\n        value={timeValue}\n        placeholder={TICK_TIME_PLACEHOLDER}\n      />\n    );\n  }\n}\n\nTaskTime.propTypes = {\n  changeTickTime: PropTypes.func.isRequired,\n  timeValue: PropTypes.string.isRequired,\n};\n\nexport default TaskTime;\n"]},"metadata":{},"sourceType":"module"}