{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar debug = require('debug')('feathers-errors');\n\nfunction FeathersError(msg, name, code, className, data) {\n  msg = msg || 'Error';\n  var errors = void 0;\n  var message = void 0;\n  var newData = void 0;\n\n  if (msg instanceof Error) {\n    message = msg.message || 'Error'; // NOTE (EK): This is typically to handle validation errors\n\n    if (msg.errors) {\n      errors = msg.errors;\n    }\n  } else if ((typeof msg === 'undefined' ? 'undefined' : _typeof(msg)) === 'object') {\n    // Support plain old objects\n    message = msg.message || 'Error';\n    data = msg;\n  } else {\n    // message is just a string\n    message = msg;\n  }\n\n  if (data) {\n    // NOTE(EK): To make sure that we are not messing\n    // with immutable data, just make a copy.\n    // https://github.com/feathersjs/feathers-errors/issues/19\n    newData = JSON.parse(JSON.stringify(data));\n\n    if (newData.errors) {\n      errors = newData.errors;\n      delete newData.errors;\n    } else if (data.errors) {\n      // The errors property from data could be\n      // stripped away while cloning resulting newData not to have it\n      // For example: when cloning arrays this property\n      errors = JSON.parse(JSON.stringify(data.errors));\n    }\n  } // NOTE (EK): Babel doesn't support this so\n  // we have to pass in the class name manually.\n  // this.name = this.constructor.name;\n\n\n  this.type = 'FeathersError';\n  this.name = name;\n  this.message = message;\n  this.code = code;\n  this.className = className;\n  this.data = newData;\n  this.errors = errors || {};\n  debug(this.name + '(' + this.code + '): ' + this.message);\n  debug(this.errors);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, FeathersError);\n  } else {\n    this.stack = new Error().stack;\n  }\n}\n\nFeathersError.prototype = Object.create(Error.prototype); // NOTE (EK): A little hack to get around `message` not\n// being included in the default toJSON call.\n\nObject.defineProperty(FeathersError.prototype, 'toJSON', {\n  value: function value() {\n    return {\n      name: this.name,\n      message: this.message,\n      code: this.code,\n      className: this.className,\n      data: this.data,\n      errors: this.errors\n    };\n  }\n}); // 400 - Bad Request\n\nfunction BadRequest(message, data) {\n  FeathersError.call(this, message, 'BadRequest', 400, 'bad-request', data);\n}\n\nBadRequest.prototype = FeathersError.prototype; // 401 - Not Authenticated\n\nfunction NotAuthenticated(message, data) {\n  FeathersError.call(this, message, 'NotAuthenticated', 401, 'not-authenticated', data);\n}\n\nNotAuthenticated.prototype = FeathersError.prototype; // 402 - Payment Error\n\nfunction PaymentError(message, data) {\n  FeathersError.call(this, message, 'PaymentError', 402, 'payment-error', data);\n}\n\nPaymentError.prototype = FeathersError.prototype; // 403 - Forbidden\n\nfunction Forbidden(message, data) {\n  FeathersError.call(this, message, 'Forbidden', 403, 'forbidden', data);\n}\n\nForbidden.prototype = FeathersError.prototype; // 404 - Not Found\n\nfunction NotFound(message, data) {\n  FeathersError.call(this, message, 'NotFound', 404, 'not-found', data);\n}\n\nNotFound.prototype = FeathersError.prototype; // 405 - Method Not Allowed\n\nfunction MethodNotAllowed(message, data) {\n  FeathersError.call(this, message, 'MethodNotAllowed', 405, 'method-not-allowed', data);\n}\n\nMethodNotAllowed.prototype = FeathersError.prototype; // 406 - Not Acceptable\n\nfunction NotAcceptable(message, data) {\n  FeathersError.call(this, message, 'NotAcceptable', 406, 'not-acceptable', data);\n}\n\nNotAcceptable.prototype = FeathersError.prototype; // 408 - Timeout\n\nfunction Timeout(message, data) {\n  FeathersError.call(this, message, 'Timeout', 408, 'timeout', data);\n}\n\nTimeout.prototype = FeathersError.prototype; // 409 - Conflict\n\nfunction Conflict(message, data) {\n  FeathersError.call(this, message, 'Conflict', 409, 'conflict', data);\n}\n\nConflict.prototype = FeathersError.prototype; // 411 - Length Required\n\nfunction LengthRequired(message, data) {\n  FeathersError.call(this, message, 'LengthRequired', 411, 'length-required', data);\n}\n\nLengthRequired.prototype = FeathersError.prototype; // 422 Unprocessable\n\nfunction Unprocessable(message, data) {\n  FeathersError.call(this, message, 'Unprocessable', 422, 'unprocessable', data);\n}\n\nUnprocessable.prototype = FeathersError.prototype; // 429 Too Many Requests\n\nfunction TooManyRequests(message, data) {\n  FeathersError.call(this, message, 'TooManyRequests', 429, 'too-many-requests', data);\n}\n\nTooManyRequests.prototype = FeathersError.prototype; // 500 - General Error\n\nfunction GeneralError(message, data) {\n  FeathersError.call(this, message, 'GeneralError', 500, 'general-error', data);\n}\n\nGeneralError.prototype = FeathersError.prototype; // 501 - Not Implemented\n\nfunction NotImplemented(message, data) {\n  FeathersError.call(this, message, 'NotImplemented', 501, 'not-implemented', data);\n}\n\nNotImplemented.prototype = FeathersError.prototype; // 502 - Bad Gateway\n\nfunction BadGateway(message, data) {\n  FeathersError.call(this, message, 'BadGateway', 502, 'bad-gateway', data);\n}\n\nBadGateway.prototype = FeathersError.prototype; // 503 - Unavailable\n\nfunction Unavailable(message, data) {\n  FeathersError.call(this, message, 'Unavailable', 503, 'unavailable', data);\n}\n\nUnavailable.prototype = FeathersError.prototype;\nvar errors = {\n  FeathersError: FeathersError,\n  BadRequest: BadRequest,\n  NotAuthenticated: NotAuthenticated,\n  PaymentError: PaymentError,\n  Forbidden: Forbidden,\n  NotFound: NotFound,\n  MethodNotAllowed: MethodNotAllowed,\n  NotAcceptable: NotAcceptable,\n  Timeout: Timeout,\n  Conflict: Conflict,\n  LengthRequired: LengthRequired,\n  Unprocessable: Unprocessable,\n  TooManyRequests: TooManyRequests,\n  GeneralError: GeneralError,\n  NotImplemented: NotImplemented,\n  BadGateway: BadGateway,\n  Unavailable: Unavailable,\n  400: BadRequest,\n  401: NotAuthenticated,\n  402: PaymentError,\n  403: Forbidden,\n  404: NotFound,\n  405: MethodNotAllowed,\n  406: NotAcceptable,\n  408: Timeout,\n  409: Conflict,\n  411: LengthRequired,\n  422: Unprocessable,\n  429: TooManyRequests,\n  500: GeneralError,\n  501: NotImplemented,\n  502: BadGateway,\n  503: Unavailable\n};\n\nfunction convert(error) {\n  if (!error) {\n    return error;\n  }\n\n  var FeathersError = errors[error.name];\n  var result = FeathersError ? new FeathersError(error.message, error.data) : new Error(error.message || error);\n\n  if ((typeof error === 'undefined' ? 'undefined' : _typeof(error)) === 'object') {\n    _extends(result, error);\n  }\n\n  return result;\n}\n\nexports.default = _extends({\n  convert: convert,\n  types: errors,\n  errors: errors\n}, errors);\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}